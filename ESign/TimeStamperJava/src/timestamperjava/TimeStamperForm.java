/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package timestamperjava;

import esign.lib.ESignUtil;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import timestamperjava.ws.ArrayOfDocumentClass;
import timestamperjava.ws.DocumentClass;
import timestamperjava.ws.WSFileManager;
import tr.gov.tubitak.uekae.esya.api.common.ESYAException;
import tr.gov.tubitak.uekae.esya.api.signature.SignatureException;

/**
 *
 * @author cihan
 */
public class TimeStamperForm extends javax.swing.JDialog {

    timestamperjava.ws.WSFileManager fileManagerWS;
    timestamperjava.ws.WSFileManagerSoap fileManagerSoap;
    ESignUtil esignUtil;

    /**
     * Creates new form TimeStamperForm
     */
    public TimeStamperForm(java.awt.Frame parent, boolean modal) throws FileNotFoundException, ESYAException {
        super(parent, modal);
        initComponents();
        fileManagerWS = new WSFileManager();
        fileManagerSoap = fileManagerWS.getWSFileManagerSoap();
        esignUtil = new ESignUtil();
        InputStream isLicense = new FileInputStream("c:\\lisans\\lisans.xml"); //classLoader.getResourceAsStream("c:\\lisans\\lisans.xml");
        esignUtil.setLicenseXml(isLicense);
        esignUtil.configFile = "c:\\config\\esya-signature-config.xml";
        esignUtil.policyFile = "c:\\config\\certval-policy.xml";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popUp = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        btnListNoTimeStampedFiles = new javax.swing.JButton();
        btnListTimeOut = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDocuments = new javax.swing.JTable();

        jMenuItem1.setText("Zaman Damgası Ekle");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        popUp.add(jMenuItem1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Zaman Damgası Uygulaması");

        btnListNoTimeStampedFiles.setText("Zaman Damgası Olmayan Dokümanları Listele");
        btnListNoTimeStampedFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListNoTimeStampedFilesActionPerformed(evt);
            }
        });

        btnListTimeOut.setText("Zaman Damgası Süresi Dolmuş Dokümanları Listele");
        btnListTimeOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListTimeOutActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Doküman Listesi"));
        jPanel1.setToolTipText("");

        tblDocuments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Dosya Adı", "Upload Tarihi", "Damga Tarihi"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblDocuments.setColumnSelectionAllowed(true);
        tblDocuments.setComponentPopupMenu(popUp);
        jScrollPane1.setViewportView(tblDocuments);
        tblDocuments.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnListNoTimeStampedFiles)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnListTimeOut, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnListNoTimeStampedFiles)
                    .addComponent(btnListTimeOut))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadList(boolean justNotTimeStamped) {
        ArrayOfDocumentClass result = fileManagerSoap.getNotTimeStampedDocuments(justNotTimeStamped);
        List<DocumentClass> listOfDocuments = result.getDocumentClass();
        DefaultTableModel model = (DefaultTableModel) tblDocuments.getModel();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }
        for (DocumentClass document : listOfDocuments) {
            model.addRow(new Object[]{document.getDocumentID(), document.getDocumentName(), document.getUploadDate(), document.getTimeStampingDate()});
        }
        tblDocuments.setModel(model);
    }
    private void btnListNoTimeStampedFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListNoTimeStampedFilesActionPerformed
        loadList(true);
    }//GEN-LAST:event_btnListNoTimeStampedFilesActionPerformed

    private void btnListTimeOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListTimeOutActionPerformed
        loadList(false);
    }//GEN-LAST:event_btnListTimeOutActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        if (tblDocuments.getSelectedRow() > -1) {
            String selectedDocumentID = tblDocuments.getModel().getValueAt(tblDocuments.getSelectedRow(), 0).toString();
            byte[] fileBytes = fileManagerSoap.getSignedFileBytes(selectedDocumentID, "");
            Path currentRelativePath = Paths.get("");
            String tempPath = currentRelativePath.toAbsolutePath().toString().concat("\\tmp.pdf");
            try {
                File f = new File(tempPath);
                if (f.exists()) {
                    f.delete();
                }
                try (FileOutputStream fileOutputStream = new FileOutputStream(f)) {
                    fileOutputStream.write(fileBytes);
                }
                byte[] timeStampedBytes = esignUtil.convertSignedPdfToTimeStampedPdf(tempPath);
                if (fileManagerSoap.uploadTimeStampedFile(selectedDocumentID, timeStampedBytes)) {
                    JOptionPane.showMessageDialog(rootPane, "Zaman damgası eklendi.");
                    loadList(true);
                }
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            } catch (IOException | SignatureException | ESYAException ex) {
                JOptionPane.showMessageDialog(rootPane, ex.getMessage());
            }
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TimeStamperForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TimeStamperForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TimeStamperForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TimeStamperForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TimeStamperForm dialog = null;
                try {
                    dialog = new TimeStamperForm(new javax.swing.JFrame(), true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(TimeStamperForm.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ESYAException ex) {
                    Logger.getLogger(TimeStamperForm.class.getName()).log(Level.SEVERE, null, ex);
                }
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnListNoTimeStampedFiles;
    private javax.swing.JButton btnListTimeOut;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu popUp;
    private javax.swing.JTable tblDocuments;
    // End of variables declaration//GEN-END:variables
}
