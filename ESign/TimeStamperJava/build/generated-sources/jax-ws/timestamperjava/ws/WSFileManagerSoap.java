
package timestamperjava.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WSFileManagerSoap", targetNamespace = "http://tempuri.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WSFileManagerSoap {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://tempuri.org/helloWorld")
    @WebResult(name = "helloWorldResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "helloWorld", targetNamespace = "http://tempuri.org/", className = "timestamperjava.ws.HelloWorld")
    @ResponseWrapper(localName = "helloWorldResponse", targetNamespace = "http://tempuri.org/", className = "timestamperjava.ws.HelloWorldResponse")
    public String helloWorld();

    /**
     * 
     * @param documentID
     * @param sessionID
     * @return
     *     returns byte[]
     */
    @WebMethod(action = "http://tempuri.org/getFileBytes")
    @WebResult(name = "getFileBytesResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "getFileBytes", targetNamespace = "http://tempuri.org/", className = "timestamperjava.ws.GetFileBytes")
    @ResponseWrapper(localName = "getFileBytesResponse", targetNamespace = "http://tempuri.org/", className = "timestamperjava.ws.GetFileBytesResponse")
    public byte[] getFileBytes(
        @WebParam(name = "documentID", targetNamespace = "http://tempuri.org/")
        String documentID,
        @WebParam(name = "sessionID", targetNamespace = "http://tempuri.org/")
        String sessionID);

    /**
     * 
     * @param documentID
     * @param sessionID
     * @return
     *     returns byte[]
     */
    @WebMethod(action = "http://tempuri.org/getSignedFileBytes")
    @WebResult(name = "getSignedFileBytesResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "getSignedFileBytes", targetNamespace = "http://tempuri.org/", className = "timestamperjava.ws.GetSignedFileBytes")
    @ResponseWrapper(localName = "getSignedFileBytesResponse", targetNamespace = "http://tempuri.org/", className = "timestamperjava.ws.GetSignedFileBytesResponse")
    public byte[] getSignedFileBytes(
        @WebParam(name = "documentID", targetNamespace = "http://tempuri.org/")
        String documentID,
        @WebParam(name = "sessionID", targetNamespace = "http://tempuri.org/")
        String sessionID);

    /**
     * 
     * @param signedFileBytes
     * @param documentID
     * @return
     *     returns boolean
     */
    @WebMethod(action = "http://tempuri.org/uploadSignedFile")
    @WebResult(name = "uploadSignedFileResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "uploadSignedFile", targetNamespace = "http://tempuri.org/", className = "timestamperjava.ws.UploadSignedFile")
    @ResponseWrapper(localName = "uploadSignedFileResponse", targetNamespace = "http://tempuri.org/", className = "timestamperjava.ws.UploadSignedFileResponse")
    public boolean uploadSignedFile(
        @WebParam(name = "documentID", targetNamespace = "http://tempuri.org/")
        String documentID,
        @WebParam(name = "signedFileBytes", targetNamespace = "http://tempuri.org/")
        byte[] signedFileBytes);

    /**
     * 
     * @param justNotTimeStamped
     * @return
     *     returns timestamperjava.ws.ArrayOfDocumentClass
     */
    @WebMethod(action = "http://tempuri.org/getNotTimeStampedDocuments")
    @WebResult(name = "getNotTimeStampedDocumentsResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "getNotTimeStampedDocuments", targetNamespace = "http://tempuri.org/", className = "timestamperjava.ws.GetNotTimeStampedDocuments")
    @ResponseWrapper(localName = "getNotTimeStampedDocumentsResponse", targetNamespace = "http://tempuri.org/", className = "timestamperjava.ws.GetNotTimeStampedDocumentsResponse")
    public ArrayOfDocumentClass getNotTimeStampedDocuments(
        @WebParam(name = "justNotTimeStamped", targetNamespace = "http://tempuri.org/")
        boolean justNotTimeStamped);

    /**
     * 
     * @param signedFileBytes
     * @param documentID
     * @return
     *     returns boolean
     */
    @WebMethod(action = "http://tempuri.org/uploadTimeStampedFile")
    @WebResult(name = "uploadTimeStampedFileResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "uploadTimeStampedFile", targetNamespace = "http://tempuri.org/", className = "timestamperjava.ws.UploadTimeStampedFile")
    @ResponseWrapper(localName = "uploadTimeStampedFileResponse", targetNamespace = "http://tempuri.org/", className = "timestamperjava.ws.UploadTimeStampedFileResponse")
    public boolean uploadTimeStampedFile(
        @WebParam(name = "documentID", targetNamespace = "http://tempuri.org/")
        String documentID,
        @WebParam(name = "signedFileBytes", targetNamespace = "http://tempuri.org/")
        byte[] signedFileBytes);

}
